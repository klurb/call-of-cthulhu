["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$advenjure.hooks","~:imports",null,"~:requires",["^ ","~$advenjure.eval","^9"],"~:uses",["^ ","~$eval","^9"],"~:defs",["^ ","~$execute",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/mathieubollore/code/call-of-cthulhu/resources/public/js/out/advenjure/hooks.cljc","~:line",4,"~:column",7,"~:end-line",4,"~:end-column",14,"~:arglists",["~#list",["~$quote",["^F",[["~$game-state","~$hook-kw","~$&","~$extra"]]]]],"~:doc","Pipe the game state through the hooks loaded for the given event kw,\n  passing the extra parameters in each step.","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",2,"~:method-params",[["^F",["^H","^I","^J"]]],"^E",["^F",[["^H","^I","~$&","^J"]]],"~:arglists-meta",["^F",[null]]]],"^5","~$advenjure.hooks/execute","^M",true,"^@","resources/public/js/out/advenjure/hooks.cljc","^D",14,"^L",["^ ","^M",true,"^N",2,"^O",[["^F",["^H","^I","^J"]]],"^E",["^F",[["^H","^I","~$&","^J"]]],"^P",["^F",[null]]],"^O",[["^F",["^H","^I","^J"]]],"~:protocol-impl",null,"^P",["^F",[null]],"^B",1,"^A",4,"^C",4,"^N",2,"~:fn-var",true,"^E",["^F",[["^H","^I","~$&","^J"]]],"^K","Pipe the game state through the hooks loaded for the given event kw,\n  passing the extra parameters in each step."],"~$eval-precondition",["^ ","^>",null,"^?",["^ ","^@","/Users/mathieubollore/code/call-of-cthulhu/resources/public/js/out/advenjure/hooks.cljc","^A",12,"^B",7,"^C",12,"^D",24,"^E",["^F",["^G",["^F",[["~$condition","~$&","~$args"]]]]],"^K","If the condition is a function return it's value, otherwise return unchanged.","^L",["^ ","^M",true,"^N",1,"^O",[["^F",["^U","^V"]]],"^E",["^F",[["^U","~$&","^V"]]],"^P",["^F",[null]]]],"^5","~$advenjure.hooks/eval-precondition","^M",true,"^@","resources/public/js/out/advenjure/hooks.cljc","^D",24,"^L",["^ ","^M",true,"^N",1,"^O",[["^F",["^U","^V"]]],"^E",["^F",[["^U","~$&","^V"]]],"^P",["^F",[null]]],"^O",[["^F",["^U","^V"]]],"^R",null,"^P",["^F",[null]],"^B",1,"^A",12,"^C",12,"^N",1,"^S",true,"^E",["^F",[["^U","~$&","^V"]]],"^K","If the condition is a function return it's value, otherwise return unchanged."],"~$eval-postcondition",["^ ","^>",null,"^?",["^ ","^@","/Users/mathieubollore/code/call-of-cthulhu/resources/public/js/out/advenjure/hooks.cljc","^A",20,"^B",7,"^C",20,"^D",25,"^E",["^F",["^G",["^F",[["^U","~$old-state","~$new-state"]]]]],"^K","If there's a postcondition defined, evaluate it and return new game-state.\n  Otherwise return the game-state unchanged."],"^5","~$advenjure.hooks/eval-postcondition","^M",false,"^@","resources/public/js/out/advenjure/hooks.cljc","^D",25,"^O",["^F",[["^U","^Y","^Z"]]],"^R",null,"^P",["^F",[null,null]],"^B",1,"^A",20,"^C",20,"^N",3,"^S",true,"^E",["^F",["^G",["^F",[["^U","^Y","^Z"]]]]],"^K","If there's a postcondition defined, evaluate it and return new game-state.\n  Otherwise return the game-state unchanged."],"~$eval-direction",["^ ","^>",null,"^?",["^ ","^@","/Users/mathieubollore/code/call-of-cthulhu/resources/public/js/out/advenjure/hooks.cljc","^A",30,"^B",7,"^C",30,"^D",21,"^E",["^F",["^G",["^F",[["^H","~$direction"]]]]],"^K","Eval the precondition found in the given direction of the current room."],"^5","~$advenjure.hooks/eval-direction","^M",false,"^@","resources/public/js/out/advenjure/hooks.cljc","^D",21,"^O",["^F",[["^H","^11"]]],"^R",null,"^P",["^F",[null,null]],"^B",1,"^A",30,"^C",30,"^N",2,"^S",true,"^E",["^F",["^G",["^F",[["^H","^11"]]]]],"^K","Eval the precondition found in the given direction of the current room."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:pre","~:hooks","~:room-map","~:post","~:configuration","~:current-room"]],"~:order",["^1:","^17","^16","^19","^1;","^18"]],"^K",null]